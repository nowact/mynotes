概念和术语

Context
Context是AMI自身运行的上下文，也是应用接入AMI的基本单位。一个Context只能被一个应用进程实例使用；一个应用进程可以使用多个Context（最多10个），但是一般一个应用进程只需要一个Context。默认情况下，所有Context都必须先在DomainServer页面中配置，然后才能被进程使用。

Tier
Tier是AMI的容错集群，一个容错集群由多个副本(Replica)组成。Tier内每个副本都是一个运行时的进程实例。通过DomainServer配置Context时需要指定Context所属的Tier名称。

Endpoint
AMI支持发布订阅模式的主题语义，主题是一个单向通讯的管道（也可以理解为队列）。消息进入管道的一端被命名为TxEndpoint；消息离开管道的一端被命名为RxEndpoint。通过DomainServer中配置，可以将Context接入某一主题的管道进行发布或订阅消息。

Partition
AMI支持在同一个主题上配置多个Partition（分区）。分区的目的是为了支持系统按照业务/用户进行横向扩展和主题上消息的负载均衡，以提升吞吐能力。如果把主题比作一个单向管道，那么分区就是这个大管道内部的小管道。一个Context可以订阅主题上某个分区或某几个分区的消息；一个生产者在向主题上推送消息时可以指定推送消息到某一个分区。


同一主机上部署的AMI应用可以基于共享内存进行消息通讯，以降低传输延迟。
默认情况下，主题上的消息不能超过1MB，对于配置了IsHugeMessage属性的主题，AMI可以支持发送超过1MB以上的消息。



Context(应用名)规则
CTE_1_1_11
CTE 业务组件名
第一个1是分区号
第二个1是应用实例所在的数据中心ID
最后的11是应用的实例ID，其中十位上的1一般是数据中心ID

判断时延的方法：1、log打点 2、tcpdump抓包

可靠组播协议RFC3208

